{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/muzaqi/Desktop/build-a-website-2/src/containers/Details.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport WeatherImage from \"../components/WeatherImage\";\nimport \"../App.css\"; // TODO\n// - implement API\n// - add props to details screen\n// - style the details screen\n\nfunction Details() {\n  _s();\n\n  const history = useHistory();\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState(\"Jakarta\");\n  useEffect(() => {\n    console.log(process.env.REACT_APP_WEATHER_KEY);\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${process.env.REACT_APP_WEATHER_KEY}`).then(function (response) {\n      // Successful request\n      const weather = response.data;\n      setWeatherData(weather);\n    }).catch(function (error) {\n      // The best practice of coding is to not use console.log\n      console.log(error);\n    });\n  }, [city]);\n  useEffect(() => {\n    const searchParams = history.location.search;\n    const urlParams = new URLSearchParams(searchParams);\n    const city = urlParams.get(\"name\");\n\n    if (city) {\n      setCity(city);\n    }\n  }, [history]);\n  const {\n    cloudiness,\n    currentTemp,\n    highTemp,\n    humidity,\n    lowTemp,\n    weatherType,\n    windSpeed\n  } = useMemo(() => {\n    let cloudiness = \"\";\n    let currentTemp = \"\";\n    let highTemp = \"\";\n    let humidity = \"\";\n    let lowTemp = \"\";\n    let weatherType = \"\";\n    let windSpeed = \"\";\n\n    if (weatherData) {\n      cloudiness = `${weatherData.clouds.all}%`;\n      currentTemp = `${Math.round(weatherData.main.temp)}°C`;\n      highTemp = `${Math.round(weatherData.main.temp_max)}°C`;\n      humidity = `${weatherData.main.humidity}%`;\n      lowTemp = `${Math.round(weatherData.main.temp_min)}°C`;\n      weatherType = `${weatherData.weather[0].description}`;\n      windSpeed = `${weatherData.wind.speed} mph`;\n    }\n\n    return {\n      cloudiness,\n      currentTemp,\n      highTemp,\n      humidity,\n      lowTemp,\n      weatherType,\n      windSpeed\n    };\n  }, [weatherData]);\n  return (\n    /*#__PURE__*/\n    // Container\n    _jsxDEV(\"div\", {\n      className: \"flex flex-col items-center h-screen bg-black text-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-10 text-10xl font-bold text-white\",\n        children: [\"Weather in \", city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col p-8 m-4 border-2 rounded-md border-white items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: weatherType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Current Temperature : \", currentTemp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"High Temperature : \", highTemp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Cloudiness : \", cloudiness]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Low Temperature : \", lowTemp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Humidity : \", humidity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Wind Speed : \", windSpeed]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(Details, \"B6sC+wWsrogs00j2N7EkRLqfhuI=\", false, function () {\n  return [useHistory];\n});\n\n_c = Details;\nexport default Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/Users/muzaqi/Desktop/build-a-website-2/src/containers/Details.js"],"names":["React","useState","useEffect","useMemo","useHistory","axios","WeatherImage","Details","history","weatherData","setWeatherData","city","setCity","console","log","process","env","REACT_APP_WEATHER_KEY","get","then","response","weather","data","catch","error","searchParams","location","search","urlParams","URLSearchParams","cloudiness","currentTemp","highTemp","humidity","lowTemp","weatherType","windSpeed","clouds","all","Math","round","main","temp","temp_max","temp_min","description","wind","speed"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,OAApD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAO,YAAP,C,CAEA;AACA;AACA;AACA;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,SAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,qBAAxB;AACAZ,IAAAA,KAAK,CACFa,GADH,CAEK,qDAAoDP,IAAK,uBAAsBI,OAAO,CAACC,GAAR,CAAYC,qBAAsB,EAFtH,EAIGE,IAJH,CAIQ,UAAUC,QAAV,EAAoB;AACxB;AACA,YAAMC,OAAO,GAAGD,QAAQ,CAACE,IAAzB;AACAZ,MAAAA,cAAc,CAACW,OAAD,CAAd;AACD,KARH,EASGE,KATH,CASS,UAAUC,KAAV,EAAiB;AACtB;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACD,KAZH;AAaD,GAfQ,EAeN,CAACb,IAAD,CAfM,CAAT;AAiBAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuB,YAAY,GAAGjB,OAAO,CAACkB,QAAR,CAAiBC,MAAtC;AACA,UAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoBJ,YAApB,CAAlB;AACA,UAAMd,IAAI,GAAGiB,SAAS,CAACV,GAAV,CAAc,MAAd,CAAb;;AACA,QAAIP,IAAJ,EAAU;AACRC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD;AACF,GAPQ,EAON,CAACH,OAAD,CAPM,CAAT;AASA,QAAM;AACJsB,IAAAA,UADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA,WANI;AAOJC,IAAAA;AAPI,MAQFjC,OAAO,CAAC,MAAM;AAChB,QAAI2B,UAAU,GAAG,EAAjB;AACA,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,OAAO,GAAG,EAAd;AACA,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIC,SAAS,GAAG,EAAhB;;AAEA,QAAI3B,WAAJ,EAAiB;AACfqB,MAAAA,UAAU,GAAI,GAAErB,WAAW,CAAC4B,MAAZ,CAAmBC,GAAI,GAAvC;AACAP,MAAAA,WAAW,GAAI,GAAEQ,IAAI,CAACC,KAAL,CAAW/B,WAAW,CAACgC,IAAZ,CAAiBC,IAA5B,CAAkC,IAAnD;AACAV,MAAAA,QAAQ,GAAI,GAAEO,IAAI,CAACC,KAAL,CAAW/B,WAAW,CAACgC,IAAZ,CAAiBE,QAA5B,CAAsC,IAApD;AACAV,MAAAA,QAAQ,GAAI,GAAExB,WAAW,CAACgC,IAAZ,CAAiBR,QAAS,GAAxC;AACAC,MAAAA,OAAO,GAAI,GAAEK,IAAI,CAACC,KAAL,CAAW/B,WAAW,CAACgC,IAAZ,CAAiBG,QAA5B,CAAsC,IAAnD;AACAT,MAAAA,WAAW,GAAI,GAAE1B,WAAW,CAACY,OAAZ,CAAoB,CAApB,EAAuBwB,WAAY,EAApD;AACAT,MAAAA,SAAS,GAAI,GAAE3B,WAAW,CAACqC,IAAZ,CAAiBC,KAAM,MAAtC;AACD;;AAED,WAAO;AACLjB,MAAAA,UADK;AAELC,MAAAA,WAFK;AAGLC,MAAAA,QAHK;AAILC,MAAAA,QAJK;AAKLC,MAAAA,OALK;AAMLC,MAAAA,WANK;AAOLC,MAAAA;AAPK,KAAP;AASD,GA5BU,EA4BR,CAAC3B,WAAD,CA5BQ,CARX;AAsCA;AAAA;AACE;AACA;AAAK,MAAA,SAAS,EAAC,yDAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,qCAAf;AAAA,kCAAiEE,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAK,QAAA,SAAS,EAAC,qEAAf;AAAA,gCACE;AAAA,oBAAMwB;AAAN;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,+CAA6BJ,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAQE;AAAA,0CAAyBC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAA,oCAAmBF,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AAAA,yCAAwBI,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAA,kCAAiBD,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AAAA,oCAAmBG,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAiBD;;GAtFQ7B,O;UACSH,U;;;KADTG,O;AAwFT,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport WeatherImage from \"../components/WeatherImage\";\nimport \"../App.css\";\n\n// TODO\n// - implement API\n// - add props to details screen\n// - style the details screen\n\nfunction Details() {\n  const history = useHistory();\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState(\"Jakarta\");\n\n  useEffect(() => {\n    console.log(process.env.REACT_APP_WEATHER_KEY);\n    axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${process.env.REACT_APP_WEATHER_KEY}`\n      )\n      .then(function (response) {\n        // Successful request\n        const weather = response.data;\n        setWeatherData(weather);\n      })\n      .catch(function (error) {\n        // The best practice of coding is to not use console.log\n        console.log(error);\n      });\n  }, [city]);\n\n  useEffect(() => {\n    const searchParams = history.location.search;\n    const urlParams = new URLSearchParams(searchParams);\n    const city = urlParams.get(\"name\");\n    if (city) {\n      setCity(city);\n    }\n  }, [history]);\n\n  const {\n    cloudiness,\n    currentTemp,\n    highTemp,\n    humidity,\n    lowTemp,\n    weatherType,\n    windSpeed,\n  } = useMemo(() => {\n    let cloudiness = \"\";\n    let currentTemp = \"\";\n    let highTemp = \"\";\n    let humidity = \"\";\n    let lowTemp = \"\";\n    let weatherType = \"\";\n    let windSpeed = \"\";\n\n    if (weatherData) {\n      cloudiness = `${weatherData.clouds.all}%`;\n      currentTemp = `${Math.round(weatherData.main.temp)}°C`;\n      highTemp = `${Math.round(weatherData.main.temp_max)}°C`;\n      humidity = `${weatherData.main.humidity}%`;\n      lowTemp = `${Math.round(weatherData.main.temp_min)}°C`;\n      weatherType = `${weatherData.weather[0].description}`;\n      windSpeed = `${weatherData.wind.speed} mph`;\n    }\n\n    return {\n      cloudiness,\n      currentTemp,\n      highTemp,\n      humidity,\n      lowTemp,\n      weatherType,\n      windSpeed,\n    };\n  }, [weatherData]);\n\n  return (\n    // Container\n    <div className=\"flex flex-col items-center h-screen bg-black text-white\">\n      <div className=\"p-10 text-10xl font-bold text-white\">Weather in {city}</div>\n\n      <div className=\"flex flex-col p-8 m-4 border-2 rounded-md border-white items-center\">\n        <div>{weatherType}</div>\n        <div >Current Temperature : {currentTemp}</div>\n      </div>\n\n      <div>High Temperature : {highTemp}</div>\n      <div>Cloudiness : {cloudiness}</div>\n      <div>Low Temperature : {lowTemp}</div>\n      <div>Humidity : {humidity}</div>\n      <div>Wind Speed : {windSpeed}</div>\n    </div>\n  );\n}\n\nexport default Details;"]},"metadata":{},"sourceType":"module"}