{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/muzaqi/Desktop/build-a-website-2/src/containers/Details.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport WeatherImage from \"../components/WeatherImage\";\nimport \"../App.css\"; // TODO\n// - implement API\n// - add props to details screen\n// - style the details screen\n\nfunction Details() {\n  _s();\n\n  const history = useHistory();\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState(\"\");\n  useEffect(() => {\n    /* console.log(process.env.REACT_APP_WEATHER_API_KEY); */\n    const apiDotenv = process.env.REACT_APP_WEATHER_API_KEY;\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${process.env.REACT_APP_WEATHER_API_KEY}`).then(function (response) {\n      // Successful request\n      const weather = response.data;\n      setWeatherData(weather);\n    }).catch(function (error) {\n      // The best practice of coding is to not use console.log\n      console.log(error);\n    });\n  }, [city]);\n  useEffect(() => {\n    const searchParams = history.location.search;\n    const urlParams = new URLSearchParams(searchParams);\n    const city = urlParams.get(\"name\");\n\n    if (city) {\n      setCity(city);\n    }\n  }, [history]);\n  const {\n    cloudiness,\n    currentTemp,\n    highTemp,\n    humidity,\n    lowTemp,\n    weatherType,\n    windSpeed\n  } = useMemo(() => {\n    let cloudiness = \"\";\n    let currentTemp = \"\";\n    let highTemp = \"\";\n    let humidity = \"\";\n    let lowTemp = \"\";\n    let weatherType = \"\";\n    let windSpeed = \"\";\n\n    if (weatherData) {\n      cloudiness = `${weatherData.clouds.all}%`;\n      currentTemp = `${Math.round(weatherData.main.temp)}°C`;\n      highTemp = `${Math.round(weatherData.main.temp_max)}°C`;\n      humidity = `${weatherData.main.humidity}%`;\n      lowTemp = `${Math.round(weatherData.main.temp_min)}°C`;\n      weatherType = `${weatherData.weather[0].description}`;\n      windSpeed = `${weatherData.wind.speed} mph`;\n    }\n\n    return {\n      cloudiness,\n      currentTemp,\n      highTemp,\n      humidity,\n      lowTemp,\n      weatherType,\n      windSpeed\n    };\n  }, [weatherData]);\n  return (\n    /*#__PURE__*/\n    // Container\n    _jsxDEV(\"div\", {\n      className: \"flex flex-col items-center h-screen bg-pink-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pt-6 text-6xl text-black font-bold\",\n        children: [\"Weather in \", city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col p-8 m-4 border-2 rounded-md border-black text-black text-2xl items-center\",\n        children: [/*#__PURE__*/_jsxDEV(WeatherImage, {\n          weatherType: weatherType,\n          className: \"text-xl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: weatherType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Current Temperature : \", currentTemp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-black text-xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"High Temperature : \", highTemp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Cloudiness : \", cloudiness]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Low Temperature : \", lowTemp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Humidity : \", humidity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Wind Speed : \", windSpeed]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(Details, \"P3VNBsDQVgevlYzRzZFHDvutqsk=\", false, function () {\n  return [useHistory];\n});\n\n_c = Details;\nexport default Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/Users/muzaqi/Desktop/build-a-website-2/src/containers/Details.js"],"names":["React","useState","useEffect","useMemo","useHistory","axios","WeatherImage","Details","history","weatherData","setWeatherData","city","setCity","apiDotenv","process","env","REACT_APP_WEATHER_API_KEY","get","then","response","weather","data","catch","error","console","log","searchParams","location","search","urlParams","URLSearchParams","cloudiness","currentTemp","highTemp","humidity","lowTemp","weatherType","windSpeed","clouds","all","Math","round","main","temp","temp_max","temp_min","description","wind","speed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport WeatherImage from \"../components/WeatherImage\";\nimport \"../App.css\";\n\n// TODO\n// - implement API\n// - add props to details screen\n// - style the details screen\n\nfunction Details() {\n  const history = useHistory();\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState(\"\");\n\n  useEffect(() => {\n    /* console.log(process.env.REACT_APP_WEATHER_API_KEY); */\n    const apiDotenv = process.env.REACT_APP_WEATHER_API_KEY\n    axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${process.env.REACT_APP_WEATHER_API_KEY}`\n      )\n      .then(function (response) {\n        // Successful request\n        const weather = response.data;\n        setWeatherData(weather);\n      })\n      .catch(function (error) {\n        // The best practice of coding is to not use console.log\n        console.log(error);\n      });\n  }, [city]);\n\n  useEffect(() => {\n    const searchParams = history.location.search;\n    const urlParams = new URLSearchParams(searchParams);\n    const city = urlParams.get(\"name\");\n    if (city) {\n      setCity(city);\n    }\n  }, [history]);\n\n  const {\n    cloudiness,\n    currentTemp,\n    highTemp,\n    humidity,\n    lowTemp,\n    weatherType,\n    windSpeed,\n  } = useMemo(() => {\n    let cloudiness = \"\";\n    let currentTemp = \"\";\n    let highTemp = \"\";\n    let humidity = \"\";\n    let lowTemp = \"\";\n    let weatherType = \"\";\n    let windSpeed = \"\";\n\n    if (weatherData) {\n      cloudiness = `${weatherData.clouds.all}%`;\n      currentTemp = `${Math.round(weatherData.main.temp)}°C`;\n      highTemp = `${Math.round(weatherData.main.temp_max)}°C`;\n      humidity = `${weatherData.main.humidity}%`;\n      lowTemp = `${Math.round(weatherData.main.temp_min)}°C`;\n      weatherType = `${weatherData.weather[0].description}`;\n      windSpeed = `${weatherData.wind.speed} mph`;\n    }\n\n    return {\n      cloudiness,\n      currentTemp,\n      highTemp,\n      humidity,\n      lowTemp,\n      weatherType,\n      windSpeed,\n    };\n  }, [weatherData]);\n\n  return (\n    // Container\n    <div className=\"flex flex-col items-center h-screen bg-pink-200\">\n      <div className=\"pt-6 text-6xl text-black font-bold\">Weather in {city}</div>\n\n      <div className=\"flex flex-col p-8 m-4 border-2 rounded-md border-black text-black text-2xl items-center\">\n        <WeatherImage weatherType={weatherType} className=\"text-xl\" />\n        <div>{weatherType}</div>\n        <div>Current Temperature : {currentTemp}</div>\n      </div>\n\n    <div className=\"text-black text-xl\">\n      <div>High Temperature : {highTemp}</div>\n      <div>Cloudiness : {cloudiness}</div>\n      <div>Low Temperature : {lowTemp}</div>\n      <div>Humidity : {humidity}</div>\n      <div>Wind Speed : {windSpeed}</div>\n    </div>\n    </div>\n  );\n}\n\nexport default Details;\n"]},"metadata":{},"sourceType":"module"}