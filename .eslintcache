[{"/Users/muzaqi/Desktop/build-a-website-2/src/App.js":"1","/Users/muzaqi/Desktop/build-a-website-2/src/index.js":"2","/Users/muzaqi/Desktop/build-a-website-2/src/containers/Home.js":"3","/Users/muzaqi/Desktop/build-a-website-2/src/components/Header.js":"4","/Users/muzaqi/Desktop/build-a-website-2/src/components/WeatherImage.js":"5","/Users/muzaqi/Desktop/build-a-website-2/src/components/City.js":"6","/Users/muzaqi/Desktop/build-a-website-2/src/containers/Details.js":"7"},{"size":466,"mtime":1609398441381,"results":"8","hashOfConfig":"9"},{"size":250,"mtime":1609162855461,"results":"10","hashOfConfig":"9"},{"size":2603,"mtime":1609409458394,"results":"11","hashOfConfig":"9"},{"size":441,"mtime":1609407688660,"results":"12","hashOfConfig":"9"},{"size":890,"mtime":1609406790486,"results":"13","hashOfConfig":"9"},{"size":541,"mtime":1609398252227,"results":"14","hashOfConfig":"9"},{"size":2880,"mtime":1609409556834,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l4w38k",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/muzaqi/Desktop/build-a-website-2/src/App.js",[],"/Users/muzaqi/Desktop/build-a-website-2/src/index.js",[],["32","33"],"/Users/muzaqi/Desktop/build-a-website-2/src/containers/Home.js",["34","35","36"],"import React, { useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Header from \"../components/Header\";\nimport WeatherImage from \"../components/WeatherImage\";\n\nimport City from \"../components/City\";\n\nfunction Home() {\n  const history = useHistory();\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState(\"Jakarta\");\n\n  const [cities, setCities] = useState([\n    {\n      name: \"Jakarta\",\n      currentTemp: \"\",\n      color: \"text-black pt-5 pb-5 pl-14\",\n    },\n    {\n      name: \"New York\",\n      currentTemp: \"\",\n      color: \"text-black bg-black bg-opacity-25 pt-5 pb-5 pl-14\",\n    },\n    {\n      name: \"Tokyo\",\n      currentTemp: \"\",\n      color: \"text-black pt-5 pb-5 pl-14\",\n    },\n    {\n      name: \"Qatar\",\n      currentTemp: \"\",\n      color: \"text-black bg-black bg-opacity-25 pt-5 pb-5 pl-14\",\n    },\n    {\n      name: \"Dubai\",\n      currentTemp: \"\",\n      color: \"text-black pt-5 pb-5 pl-14\",\n    },\n    {\n      name: \"Kuala Lumpur\",\n      currentTemp: \"\",\n      color: \"text-black bg-black bg-opacity-25 pt-5 pb-5 pl-14\",\n    },\n  ]);\n\n  useEffect(() => {\n    // console.log(process.env.REACT_APP_WEATHER_KEY);\n    axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${process.env.REACT_APP_WEATHER_KEY}`\n      )\n      .then(function (response) {\n        // Succesful request\n        const weather = response.data;\n        setWeatherData(weather);\n      })\n      .catch(function (error) {\n        // The best practice in coding is to not use console.log\n        console.warn(error);\n      });\n  }, [city]);\n\n  useEffect(() => {\n    const searchParams = history.location.search;\n    const urlParams = new URLSearchParams(searchParams);\n    const city = urlParams.get(\"city\");\n    if (city) {\n      setCity(city);\n    }\n  }, [history]);\n\n  const { currentTemp } = useMemo(() => {\n    let currentTemp = \"\";\n    if (weatherData) {\n      currentTemp = `${Math.round(weatherData.main.temp)}Â°C`;\n    }\n    return {\n      currentTemp,\n    };\n  }, [weatherData]);\n\n  console.log(\"weatherData\", weatherData);\n  console.log(\"currentTemp\", currentTemp);\n\n  return (\n    // Container\n    <div className=\"flex flex-col h-screen bg-gray-50 font-serif\">\n      <div className=\"flex flex-col items-center pt-6 pb-5 text-6xl bg-black bg-opacity-75 text-white\"> Weather App</div>\n      {cities.map((item, index) => (\n        <City cityName={item.name} temp={item.currentTemp} color={item.color} />\n      ))}\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/muzaqi/Desktop/build-a-website-2/src/components/Header.js",[],"/Users/muzaqi/Desktop/build-a-website-2/src/components/WeatherImage.js",[],"/Users/muzaqi/Desktop/build-a-website-2/src/components/City.js",[],"/Users/muzaqi/Desktop/build-a-website-2/src/containers/Details.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":5,"column":8,"nodeType":"43","messageId":"44","endLine":5,"endColumn":14},{"ruleId":"41","severity":1,"message":"45","line":6,"column":8,"nodeType":"43","messageId":"44","endLine":6,"endColumn":20},{"ruleId":"41","severity":1,"message":"46","line":15,"column":18,"nodeType":"43","messageId":"44","endLine":15,"endColumn":27},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'WeatherImage' is defined but never used.","'setCities' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]