[{"/Users/muzaqi/Desktop/build-a-website-2/src/App.js":"1","/Users/muzaqi/Desktop/build-a-website-2/src/index.js":"2","/Users/muzaqi/Desktop/build-a-website-2/src/containers/Home.js":"3","/Users/muzaqi/Desktop/build-a-website-2/src/components/Header.js":"4","/Users/muzaqi/Desktop/build-a-website-2/src/components/WeatherImage.js":"5","/Users/muzaqi/Desktop/build-a-website-2/src/components/City.js":"6","/Users/muzaqi/Desktop/build-a-website-2/src/containers/Details.js":"7"},{"size":512,"mtime":1609427780266,"results":"8","hashOfConfig":"9"},{"size":250,"mtime":1609162855461,"results":"10","hashOfConfig":"9"},{"size":2783,"mtime":1609428166862,"results":"11","hashOfConfig":"9"},{"size":441,"mtime":1609407688660,"results":"12","hashOfConfig":"9"},{"size":890,"mtime":1609406790486,"results":"13","hashOfConfig":"9"},{"size":541,"mtime":1609398252227,"results":"14","hashOfConfig":"9"},{"size":2954,"mtime":1609428116240,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"l4w38k",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},"/Users/muzaqi/Desktop/build-a-website-2/src/App.js",["35"],"/Users/muzaqi/Desktop/build-a-website-2/src/index.js",[],["36","37"],"/Users/muzaqi/Desktop/build-a-website-2/src/containers/Home.js",["38","39","40","41"],"import React, { useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Header from \"../components/Header\";\nimport WeatherImage from \"../components/WeatherImage\";\n\nimport City from \"../components/City\";\n\nfunction Home() {\n  const history = useHistory();\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState(\"Jakarta\");\n\n  const [cities, setCities] = useState([\n    {\n      name: \"Jakarta\",\n      currentTemp: \"\",\n      color: \"text-black pt-5 pb-5 pl-14\",\n    },\n    {\n      name: \"New York\",\n      currentTemp: \"\",\n      color: \"text-black bg-black bg-opacity-25 pt-5 pb-5 pl-14\",\n    },\n    {\n      name: \"Tokyo\",\n      currentTemp: \"\",\n      color: \"text-black pt-5 pb-5 pl-14\",\n    },\n    {\n      name: \"Doha\",\n      currentTemp: \"\",\n      color: \"text-black bg-black bg-opacity-25 pt-5 pb-5 pl-14\",\n    },\n    {\n      name: \"Cirebon\",\n      currentTemp: \"\",\n      color: \"text-black pt-5 pb-5 pl-14\",\n    }, \n    {\n      name: \"Kuala Lumpur\",\n      currentTemp: \"\",\n      color: \"text-black bg-black bg-opacity-25 pt-5 pb-5 pl-14\",\n    },\n    {\n      name: \"Sulaymaniyah\",\n      currentTemp: \"\",\n      color: \"text-black pt-5 pb-5 pl-14\",\n    },\n  ]);\n\n  useEffect(() => {\n    /* console.log(process.env.REACT_APP_WEATHER_API_KEY); */\n    const apiDotenv = process.env.REACT_APP_WEATHER_API_KEY\n    axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${process.env.REACT_APP_WEATHER_API_KEY}`\n      )\n      .then(function (response) {\n        // Succesful request\n        const weather = response.data;\n        setWeatherData(weather);\n      })\n      .catch(function (error) {\n        // The best practice in coding is to not use console.log\n        console.warn(error);\n      });\n  }, [city]);\n\n  useEffect(() => {\n    const searchParams = history.location.search;\n    const urlParams = new URLSearchParams(searchParams);\n    const city = urlParams.get(\"city\");\n    if (city) {\n      setCity(city);\n    }\n  }, [history]);\n\n  const { currentTemp } = useMemo(() => {\n    let currentTemp = \"\";\n    if (weatherData) {\n      currentTemp = `${Math.round(weatherData.main.temp)}째C`;\n    }\n    return {\n      currentTemp,\n    };\n  }, [weatherData]);\n\n  console.log(\"weatherData\", weatherData);\n  console.log(\"currentTemp\", currentTemp);\n\n  return (\n    // Container\n    <div className=\"flex flex-col h-screen bg-gray-50 font-serif\">\n      <div className=\"flex flex-col items-center pt-6 pb-5 text-6xl bg-black bg-opacity-75 text-white\"> Weather App</div>\n      {cities.map((item, index) => (\n        <City cityName={item.name} temp={item.currentTemp} color={item.color} />\n      ))}\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/muzaqi/Desktop/build-a-website-2/src/components/Header.js",[],"/Users/muzaqi/Desktop/build-a-website-2/src/components/WeatherImage.js",[],["42","43"],"/Users/muzaqi/Desktop/build-a-website-2/src/components/City.js",[],["44","45"],"/Users/muzaqi/Desktop/build-a-website-2/src/containers/Details.js",["46"],"import React, { useState, useEffect, useMemo } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport WeatherImage from \"../components/WeatherImage\";\nimport \"../App.css\";\n\n// TODO\n// - implement API\n// - add props to details screen\n// - style the details screen\n\nfunction Details() {\n  const history = useHistory();\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState(\"\");\n\n  useEffect(() => {\n    /* console.log(process.env.REACT_APP_WEATHER_API_KEY); */\n    const apiDotenv = process.env.REACT_APP_WEATHER_API_KEY\n    axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${process.env.REACT_APP_WEATHER_API_KEY}`\n      )\n      .then(function (response) {\n        // Successful request\n        const weather = response.data;\n        setWeatherData(weather);\n      })\n      .catch(function (error) {\n        // The best practice of coding is to not use console.log\n        console.log(error);\n      });\n  }, [city]);\n\n  useEffect(() => {\n    const searchParams = history.location.search;\n    const urlParams = new URLSearchParams(searchParams);\n    const city = urlParams.get(\"name\");\n    if (city) {\n      setCity(city);\n    }\n  }, [history]);\n\n  const {\n    cloudiness,\n    currentTemp,\n    highTemp,\n    humidity,\n    lowTemp,\n    weatherType,\n    windSpeed,\n  } = useMemo(() => {\n    let cloudiness = \"\";\n    let currentTemp = \"\";\n    let highTemp = \"\";\n    let humidity = \"\";\n    let lowTemp = \"\";\n    let weatherType = \"\";\n    let windSpeed = \"\";\n\n    if (weatherData) {\n      cloudiness = `${weatherData.clouds.all}%`;\n      currentTemp = `${Math.round(weatherData.main.temp)}째C`;\n      highTemp = `${Math.round(weatherData.main.temp_max)}째C`;\n      humidity = `${weatherData.main.humidity}%`;\n      lowTemp = `${Math.round(weatherData.main.temp_min)}째C`;\n      weatherType = `${weatherData.weather[0].description}`;\n      windSpeed = `${weatherData.wind.speed} mph`;\n    }\n\n    return {\n      cloudiness,\n      currentTemp,\n      highTemp,\n      humidity,\n      lowTemp,\n      weatherType,\n      windSpeed,\n    };\n  }, [weatherData]);\n\n  return (\n    // Container\n    <div className=\"flex flex-col items-center h-screen bg-pink-200\">\n      <div className=\"pt-6 text-6xl text-black font-bold\">Weather in {city}</div>\n\n      <div className=\"flex flex-col p-8 m-4 border-2 rounded-md border-black text-black text-2xl items-center\">\n        <WeatherImage weatherType={weatherType} className=\"text-xl\" />\n        <div>{weatherType}</div>\n        <div>Current Temperature : {currentTemp}</div>\n      </div>\n\n    <div className=\"text-black text-xl\">\n      <div>High Temperature : {highTemp}</div>\n      <div>Cloudiness : {cloudiness}</div>\n      <div>Low Temperature : {lowTemp}</div>\n      <div>Humidity : {humidity}</div>\n      <div>Wind Speed : {windSpeed}</div>\n    </div>\n    </div>\n  );\n}\n\nexport default Details;\n",{"ruleId":"47","severity":1,"message":"48","line":9,"column":7,"nodeType":"49","messageId":"50","endLine":9,"endColumn":16},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"47","severity":1,"message":"55","line":5,"column":8,"nodeType":"49","messageId":"50","endLine":5,"endColumn":14},{"ruleId":"47","severity":1,"message":"56","line":6,"column":8,"nodeType":"49","messageId":"50","endLine":6,"endColumn":20},{"ruleId":"47","severity":1,"message":"57","line":15,"column":18,"nodeType":"49","messageId":"50","endLine":15,"endColumn":27},{"ruleId":"47","severity":1,"message":"48","line":55,"column":11,"nodeType":"49","messageId":"50","endLine":55,"endColumn":20},{"ruleId":"51","replacedBy":"58"},{"ruleId":"53","replacedBy":"59"},{"ruleId":"51","replacedBy":"60"},{"ruleId":"53","replacedBy":"61"},{"ruleId":"47","severity":1,"message":"48","line":19,"column":11,"nodeType":"49","messageId":"50","endLine":19,"endColumn":20},"no-unused-vars","'apiDotenv' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["62"],"no-negated-in-lhs",["63"],"'Header' is defined but never used.","'WeatherImage' is defined but never used.","'setCities' is assigned a value but never used.",["62"],["63"],["62"],["63"],"no-global-assign","no-unsafe-negation"]